- project = event.project

.profile-icon
  - if event.action_name == "deleted"
    = custom_icon("trash_o")
  - else
    = custom_icon("icon_commit")

.event-title
  %span.pushed #{event.action_name} #{event.ref_type}
  %strong
    - commits_link = namespace_project_commits_path(project.namespace, project, event.ref_name)
    = link_to_if project.repository.branch_exists?(event.ref_name), event.ref_name, commits_link

  = render "events/event_scope", event: event

- if event.push_with_commits?
  .event-body
    %ul.well-list.event_commits
      - few_commits = event.commits[0...2]
      - few_commits.each do |commit|
        = render "events/commit", commit: commit, project: project, event: event

      - create_mr = event.new_ref? && create_mr_button?(project.default_branch, event.ref_name, project) && event.authored_by?(current_user)
      - if event.commits_count > 1
        %li.commits-stat
          - if event.commits_count > 2
            %span ... and #{event.commits_count - 2} more commits.

          - if event.md_ref?
            - from = event.commit_from
            - from_label = truncate_sha(from)
          - else
            - from = project.default_branch
            - from_label = from

          = link_to namespace_project_compare_path(project.namespace, project, from: from, to: event.commit_to) do
            Compare #{from_label}...#{truncate_sha(event.commit_to)}

          - if create_mr
            %span
              or
              = link_to create_mr_path(project.default_branch, event.ref_name, project) do
                create a merge request
      - elsif create_mr
        %li.commits-stat
          = link_to create_mr_path(project.default_branch, event.ref_name, project) do
            Create Merge Request
- elsif event.rm_ref?
  - repository = project.repository
  - last_commit = repository.commit(event.commit_from)
  - if last_commit
    .event-body
      %ul.well-list.event_commits
        = render "events/commit", commit: last_commit, project: project, event: event
