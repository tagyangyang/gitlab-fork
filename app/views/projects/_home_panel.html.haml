- empty_repo = @project.empty_repo?
.project-home-panel.text-center{ class: ("empty-project" if empty_repo) }
  .limit-container-width{ class: container_class }
    .avatar-container.s70.project-avatar
      = project_icon(@project, alt: @project.name, class: 'avatar s70 avatar-tile')
    %h1.project-title
      = @project.name
      %span.visibility-icon.has-tooltip{ data: { container: 'body' }, title: visibility_icon_description(@project) }
        = visibility_level_icon(@project.visibility_level, fw: false)

    .project-home-desc
      - if @project.description.present?
        = markdown_field(@project, :description)

      - if forked_from_project = @project.forked_from_project
        %p
          Forked from
          = link_to project_path(forked_from_project) do
            = forked_from_project.namespace.try(:name)

    .project-repo-buttons
      .count-buttons
        = render 'projects/buttons/star'
        = render 'projects/buttons/fork'

      %span.hidden-xs
        - if @project.feature_available?(:repository, current_user)
          .project-clone-holder
            = render "shared/clone_panel"

        - if current_user
          - if can?(current_user, :download_code, @project)
            = render 'projects/buttons/download', project: @project, ref: @ref
            = render 'projects/buttons/dropdown'
            = render 'projects/buttons/koding'

          = render 'shared/notifications/button', notification_setting: @notification_setting
          = render 'shared/members/access_request_buttons', source: @project
