- ref = local_assigns.fetch(:ref)
- if @note_counts
  - note_count = @note_counts.fetch(commit.id, 0)
- else
  - notes = commit.notes
  - note_count = notes.user.count

- cache_key = [project.path_with_namespace, commit.id, current_application_settings, note_count]
- cache_key.push(commit.status(ref)) if commit.status(ref)

= cache(cache_key, expires_in: 1.day) do
  %li.commit.flex-list.js-toggle-container{ id: "commit-#{commit.short_id}" }

    .avatar-cell.hidden-xs
      = author_avatar(commit, size: 36)

    .commit-detail
      .commit-content
        = link_to_gfm commit.title, namespace_project_commit_path(project.namespace, project, commit.id), class: "commit-row-message item-title"
        %span.commit-row-message.visible-xs-inline
          &middot;
          = commit.short_id
        - if commit.status(ref)
          .visible-xs-inline
            = render_commit_status(commit, ref: ref)
        - if commit.description?
          %button.text-expander.hidden-xs.js-toggle-button{ type: "button" } ...

        - if commit.description?
          %pre.commit-row-description.js-toggle-content
            = preserve(markdown(commit.description, pipeline: :single_line, author: commit.author))
        .commiter
          = commit_author_link(commit, avatar: false, size: 24)
          committed
          #{time_ago_with_tooltip(commit.committed_date)}

      .commit-actions.flex-row.hidden-xs
        - if commit.status(ref)
          = render_commit_status(commit, ref: ref)
        = clipboard_button(text: commit.id, title: "Copy commit SHA to clipboard")
        = link_to commit.short_id, namespace_project_commit_path(project.namespace, project, commit), class: "commit-short-id btn btn-transparent"
        = link_to_browse_code(project, commit)
